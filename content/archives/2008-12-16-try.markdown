---
layout: post
title: "try"
date: "2008-12-16T19:40:00+01:00"
comments: false
categories: 
---

<p>I continue to like Ruby because of nice little gems like <a href="http://ozmm.org/posts/try.html">this</a>:</p>

<pre><code>class Object
##
#   @person ? @person.name : nil
# vs
#   @person.try(:name)
def try(method)
send method if respond_to? method
end
end
</code></pre>

<section class="comments">



<div class="comment" id="comment-1903">
On <a href="#comment-1903" title="Permalink to this comment">December 17, 2008  9:00 AM</a>, Jens
said:
<p>If you want to implement:</p>

<pre>@person ? @person.name : nil</pre>

<p>It will be:</p>

<pre>
class Object
def try(method)
send method
end
end

class NilClass
def try(method)
nil
end
end
</pre>

<p>ciao
jens</p>


<div class="comment" id="comment-1904">
On <a href="#comment-1904" title="Permalink to this comment">December 17, 2008 10:08 AM</a>, <a href="http://www.martin-probst.com" title="http://www.martin-probst.com" rel="nofollow">Martin Probst</a>
said:
<p>Interestingly, this sort of functionality (and the similar idioms using &#8220;@person &#8230; if @person&#8221; and &#8220;foo = @person || &#8221; &#8221; remind me a lot of XPath/XQuery, where $x/person is simply the empty sequence if person doesn&#8217;t exist.</p>

<p>Probably an artifact of needing different programming methods for programming against content models (where stuff might be missing) as opposed to fixed programming interfaces.</p>


</section>

