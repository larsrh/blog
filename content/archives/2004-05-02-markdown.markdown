---
layout: post
title: "Markdown"
date: "2004-05-02T00:36:00+01:00"
comments: false
categories: 
---

<p>I have finally found time to play around with <a href="http://www.daringfireball.net">John Gruber</a>&#8217;s <a href="http://www.daringfireball.net/projects/markdown/">Markdown</a> and <a href="http://www.daringfireball.net/projects/smartypants">SmartyPants</a> plugin &#8212; very nice, easy-to-use ways to write readable plain text that gets translated into valid (X)HTML. The best way to see what it does, and how it works, is compare the <a href="http://daringfireball.net/projects/markdown/syntax">HTML version of the Markdown syntax</a> with the <a href="http://daringfireball.net/projects/markdown/syntax.text">plain text version</a>.</p>

<p>Markdown is exceptionally great when it comes e.g. to mixing text with code samples:
public String echo(String test) {
return &#8220;echo &#8221; + test;
}</p>

<p>This works without any problems, even if what you need to explain is some piece of XML:
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<e:envelope xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns:d="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing" xmlns:e="http://schemas.xmlsoap.org/soap/envelope/">
<e:header>
<wsa:messageid>uuid:fbc714e0-94fb-11d8-8569-f90c13908569</wsa:messageid>
<wsa:to>http://destination.example.org/TestService</wsa:to>
<wsa:action>http://destination.example.org/TestService#SomeAction</wsa:action>
<wsa:from>
<wsa:address>http://source.example.org/TestConsumer</wsa:address>
</wsa:from>
<wsa:replyto>
<wsa:address>http://source.example.org/TestConsumerReplyHandler</wsa:address>
</wsa:replyto>
<wsa:faultto>
<wsa:address>http://source.example.org/TestConsumer/FaultHandler</wsa:address>
</wsa:faultto>
</e:header>
<e:body>
&#8230;
</e:body>
</e:envelope></p>

<p>Essentially, you write your text similarly to the way you would in an email message - most thing just work intuitively, like
* hightlighting <em>bold</em> text and
* writing lists.</p>

<p>Markdown can be run from the command line or integrated into MovableType, Blosxom, and BBEdit. I have also integrated it into our internal, Java/Notes-based <a href="/blog/st/2004/03/offline_wiki.html">wiki</a> by simply calling Markdown (which is written in Perl) via <code>Runtime.exec()</code> (which is kind of embarassing, but works surprisingly well).</p>

<p>Setting it up on our servers makes for a nice war story of its own; suffice it to say that if running Markdown with Perl 5.6.0 causes a segmentation fault, it&#8217;s a good idea to really think about the consequences before updating your operating system&#8217;s default Perl installation. (Hint: Make sure you&#8217;ll be able to recompile those modules <em>before</em> you do this.)</p>

<p>Somewhere along the way I must have introduced something that makes my Perl installation choke on the variable <code>$backtick_count</code> in line 854; preceding the regexp block there with <code>my $backtick_count;</code> fixed that.</p>


